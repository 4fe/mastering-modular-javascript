[[module-thinking]]
== Module Thinking

# definitions like "what is a consumer, what is a component, interface, API touchpoint, etc."
1.1 Introduction to Module Thinking
1.2 Brief History of Modularity
1.3 Benefits of Modular Design
1.4 What Constitutes a Module?
1.5 Why Modular JavaScript?
1.6 Future of JavaScript

# note on flexibility: "By being rigid in how its declarative module syntax works, ESM favors static analysis, once again at the expense of flexibility. Flexibility inevitably comes at the cost of added complexity, which is a good reason not to offer flexible interfaces."

# note on maintainable: "**Always consider a future maintainer of your code!** If it was you, coming back after 5 years, would you resent yourself for writing code that can't be grokked on the first visual pass? Then don't write it that way and prefer having to spend a few extra keystrokes today."
